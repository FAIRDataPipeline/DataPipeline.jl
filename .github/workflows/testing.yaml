name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:

jobs:
  pipeline-tests:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        julia-version:
          - '1.8'
          - '1'
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
        experimental:
          - false
      fail-fast: false
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up julia
      uses: julia-actions/setup-julia@v1
      with:
        version: ${{ matrix.julia-version }}
        arch: ${{ matrix.arch }}
    - name: Build package
      uses: julia-actions/julia-buildpkg@v1
    - name: Set up python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        architecture: 'x64'
    - name: Install graphviz
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get install graphviz
            # sudo apt-get install libmemcached-dev
        elif [ "$RUNNER_OS" == "Windows" ]; then
            choco install graphviz
        elif [ "$RUNNER_OS" == "Darwin" ]; then
            brew install graphviz
        fi
      shell: bash
    - name: Setup fair and install remote registry
      run: |
        # Create venv
        python3 -m venv venv
        # Activate venv
        source ${ACTIVATE}
        # Intall CLI
        pip3 install fair-cli
        # Install the remote registry
        curl -fsSL https://data.scrc.uk/static/remoteregistry.sh | /bin/bash -s -- -d ${GITHUB_WORKSPACE}/registry-rem -s drams.test-remote-settings -u admin -p admin
        # Start the remote registry
        ${GITHUB_WORKSPACE}${START_FAIR_REGISTRY} -p 8001 -s drams.test-remote-settings
        # Copy the remote token
        cp ${GITHUB_WORKSPACE}/registry-rem/token $PWD/token
      env:
        ACTIVATE: ${{ runner.os == 'Windows' && 'venv\Scripts\Activate.ps1' || 'venv/bin/activate' }}
        START_FAIR_REGISTRY: ${{ runner.os == 'Windows' && '\registry-rem\scripts\start_fair_registry_windows.ps1' || '/registry-rem/scripts/start_fair_registry' }}
        FAIR_TOKEN: ${{ runner.os == 'Windows' && '\registry-rem\token' || '/registry-rem/token' }}
      # working-directory: julia_example # Use the julia_example Directory
    - name: Initialise and run FAIR CLI
      run: |
        source ${ACTIVATE}
        fair registry install
        fair registry start
        fair init --ci
        fair pull --debug examples/fdp/SEIRSconfig.yaml
        fair run --debug --dirty examples/fdp/SEIRSconfig.yaml
      env:
        ACTIVATE: ${{ runner.os == 'Windows' && 'venv/Scripts/Activate.ps1' || 'venv/bin/activate' }}
    - name: Run tests
      uses: julia-actions/julia-runtest@v1
    - name: Process coverage
      uses: julia-actions/julia-processcoverage@v1
    - name: Coveralls
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        file: ./lcov.info
    - name: Codecov
      uses: codecov/codecov-action@v3
      with:
        files: lcov.info
