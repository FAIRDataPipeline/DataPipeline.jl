name: Documentation

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up julia
        uses: julia-actions/setup-julia@v1
        with:
          version: '1'
          arch: x64
      - name: Build package
        uses: julia-actions/julia-buildpkg@v1
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install and initialise FAIR CLI
        run: |
          python -m venv venv
          source venv/bin/activate
          pip3 install fair-cli
          fair registry install
          mkdir ~/.fair/registry/datastore
          fair init --ci
          fair init --export ci.yaml
          fair registry start
      - name: Install dependencies
        run: |
            import Pkg
            Pkg.develop(Pkg.PackageSpec(path=pwd()))
            Pkg.instantiate()
            Pkg.add("DataFrames")
            Pkg.add("YAML")
            Pkg.add("Documenter")
        shell: julia --project=docs/ --color=yes {0}
      - name: Build and deploy
        run: |
          mkdir tmp
          echo "#!/bin/sh" >> ${{ github.workspace }}/tmp/tmp_file.sh
          echo "git config --local user.name "$GITHUB_ACTOR" >> ${{ github.workspace }}/tmp/tmp_file.sh
          echo "git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com" >> ${{ github.workspace }}/tmp/tmp_file.sh
          echo "julia --project=docs/ --color=yes docs/make.jl" >> ${{ github.workspace }}/tmp/tmp_file.sh
          chmod +x tmp/tmp_file.sh
          source venv/bin/activate
          fair run --script tmp/tmp_file.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
          GITHUB_EVENT_NAME: push
