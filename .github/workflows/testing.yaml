name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:

jobs:
  pipeline-tests:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        julia-version:
          - '1.8'
          - '1'
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
        experimental:
          - false
      fail-fast: false
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up julia
      uses: julia-actions/setup-julia@v1
      with:
        version: ${{ matrix.julia-version }}
        arch: ${{ matrix.arch }}
    - name: Build package
      uses: julia-actions/julia-buildpkg@v1
    - name: Fix manifest for active Julia version
      run: |
        using Pkg
        Pkg.activate("examples/fdp")
        Pkg.resolve()
      shell: julia --color=yes {0} 
    - name: Set up python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        architecture: 'x64'
    - name: Install graphviz and venv
      run: |
        # Create venv
        python3 -m venv .venv
        if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get install graphviz
            # sudo apt-get install libmemcached-dev
        elif [ "$RUNNER_OS" == "Windows" ]; then
            choco install graphviz
        elif [ "$RUNNER_OS" == "Darwin" ]; then
            brew install graphviz
        fi
      shell: bash
    - name: Install and start remote registry on Windows
      if: ${{ runner.os == 'Windows' }}
      run: |
        # Activate venv
        .venv\Scripts\activate
        # Install fair-cli
        pip3 install fair-cli
        # Install remote registry
        mkdir $GITHUB_WORKSPACE\.registry
        $script1 = $GITHUB_WORKSPACE,".registry\remoteregistry.ps1" -join "\"
        Write-Host "Download script: " + $script1
        curl https://data.scrc.uk/static/remoteregistry.ps1 > $script1
        dir $script1
        & $script1 -d $GITHUB_WORKSPACE\.registry\registry-rem -s drams.test-remote-settings -u admin -p admin
        # Start the remote registry
        $script2 = $GITHUB_WORKSPACE,".registry\registry-rem\scripts\start_fair_registry_windows.ps1" -join "\"
        Write-Host "Start registry script: " + $script2
        dir $script2
        & $script2 -p 8001 -s drams.test-remote-settings
        # Copy the remote token
        $token = $GITHUB_WORKSPACE,".registry\registry-rem\token" -join "\"
        Write-Host "Token location: " + $token
        dir $token
        cp $token token
    - name: Install and start remote registry on Linux / macOS
      if: ${{ runner.os != 'Windows' }}
      run: |
        # Activate venv
        source .venv/bin/activate
        # Install fair-cli
        pip3 install fair-cli
        # Install remote registry
        mkdir $GITHUB_WORKSPACE/.registry
        curl -fsSL https://data.scrc.uk/static/remoteregistry.sh | /bin/bash -s -- -d $GITHUB_WORKSPACE/.registry/registry-rem -s drams.test-remote-settings -u admin -p admin
        # Start the remote registry
        script=$GITHUB_WORKSPACE/.registry/registry-rem/scripts/start_fair_registry
        echo $script
        $script -p 8001 -s drams.test-remote-settings
        # Copy the remote token
        cp $GITHUB_WORKSPACE/.registry/registry-rem/token $PWD/token
    - name: Initialise and run fair-cli
      run: |
        ${ACTIVATE}
        fair registry install
        fair registry start
        fair init --ci
        fair pull --debug examples/fdp/SEIRSconfig.yaml
        fair run --debug --dirty examples/fdp/SEIRSconfig.yaml
      env:
        ACTIVATE: ${{ runner.os == 'Windows' && '.venv\Scripts\Activate.ps1' || 'source .venv/bin/activate' }}
      # working-directory: julia_example # Use the julia_example Directory
    - name: Run tests
      uses: julia-actions/julia-runtest@v1
    - name: Process coverage
      uses: julia-actions/julia-processcoverage@v1
    - name: Coveralls
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        file: ./lcov.info
    - name: Codecov
      uses: codecov/codecov-action@v3
      with:
        files: lcov.info
