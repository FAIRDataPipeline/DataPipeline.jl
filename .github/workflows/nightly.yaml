name: JuliaNightly
# Nightly Scheduled Julia Nightly Run
on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  schedule:
    - cron: '0 2 * * 0'  # Weekly at 2 AM UTC Sunday

jobs:
  test:
    name: Julia Nightly - Ubuntu - x64
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up julia
      uses: julia-actions/setup-julia@v1
      with:
        version: nightly
        arch: x64
    - name: Build package
      uses: julia-actions/julia-buildpkg@v1
    - name: Fix manifest for nightly Julia
      run: |
        using Pkg
        Pkg.activate(".")
        Pkg.resolve()
        Pkg.activate("examples/fdp")
        Pkg.resolve()
      shell: julia --color=yes {0} 
    - name: Set up python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        architecture: 'x64'
    - name: Install graphviz and venv
      run: |
        # Create venv
        python3 -m venv .venv
        sudo apt-get install graphviz
        # sudo apt-get install libmemcached-dev
      shell: bash
    - name: Install and start remote registry
      run: |
        # Activate venv
        source .venv/bin/activate
        # Install fair-cli
        pip3 install fair-cli
        # Install remote registry
        mkdir $GITHUB_WORKSPACE/.registry
        curl -fsSL https://data.scrc.uk/static/remoteregistry.sh | /bin/bash -s -- -d $GITHUB_WORKSPACE/.registry/registry-rem -s drams.test-remote-settings -u admin -p admin
        # Start the remote registry
        $GITHUB_WORKSPACE/.registry/registry-rem/scripts/start_fair_registry -p 8001 -s drams.test-remote-settings
        # Copy the remote token
        cp $GITHUB_WORKSPACE/.registry/registry-rem/token ./token
    - name: Initialise and run fair-cli
      run: |
        .venv/bin/activate
        fair registry install
        fair registry start
        fair init --ci
        fair pull --local --debug examples/fdp/SEIRSconfig.yaml
        fair run --local --debug --dirty examples/fdp/SEIRSconfig.yaml
      # working-directory: julia_example # Use the julia_example Directory
    - name: Run tests
      uses: julia-actions/julia-runtest@v1
      continue-on-error: true
